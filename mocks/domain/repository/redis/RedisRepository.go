// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// RedisRepository is an autogenerated mock type for the RedisRepository type
type RedisRepository struct {
	mock.Mock
}

// Del provides a mock function with given fields: ctx, k
func (_m *RedisRepository) Del(ctx context.Context, k string) error {
	ret := _m.Called(ctx, k)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, k)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ctx, k, o
func (_m *RedisRepository) Get(ctx context.Context, k string, o interface{}) error {
	ret := _m.Called(ctx, k, o)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}) error); ok {
		r0 = rf(ctx, k, o)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: ctx, k, v, e
func (_m *RedisRepository) Set(ctx context.Context, k string, v interface{}, e time.Duration) error {
	ret := _m.Called(ctx, k, v, e)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}, time.Duration) error); ok {
		r0 = rf(ctx, k, v, e)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRedisRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRedisRepository creates a new instance of RedisRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRedisRepository(t mockConstructorTestingTNewRedisRepository) *RedisRepository {
	mock := &RedisRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
