// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	message "github.com/fikrirnurhidayat/kasusastran/app/domain/message"
	mock "github.com/stretchr/testify/mock"
)

// WulanganEventEmitter is an autogenerated mock type for the WulanganEventEmitter type
type WulanganEventEmitter struct {
	mock.Mock
}

// EmitCreatedEvent provides a mock function with given fields: _a0
func (_m *WulanganEventEmitter) EmitCreatedEvent(_a0 *message.Wulangan) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.Wulangan) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EmitDeletedEvent provides a mock function with given fields: _a0
func (_m *WulanganEventEmitter) EmitDeletedEvent(_a0 *message.Wulangan) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.Wulangan) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EmitListedEvent provides a mock function with given fields: _a0
func (_m *WulanganEventEmitter) EmitListedEvent(_a0 *message.Wulangans) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.Wulangans) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EmitRetrievedEvent provides a mock function with given fields: _a0
func (_m *WulanganEventEmitter) EmitRetrievedEvent(_a0 *message.Wulangan) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.Wulangan) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EmitUpdatedEvent provides a mock function with given fields: _a0
func (_m *WulanganEventEmitter) EmitUpdatedEvent(_a0 *message.Wulangan) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.Wulangan) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewWulanganEventEmitter interface {
	mock.TestingT
	Cleanup(func())
}

// NewWulanganEventEmitter creates a new instance of WulanganEventEmitter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWulanganEventEmitter(t mockConstructorTestingTNewWulanganEventEmitter) *WulanganEventEmitter {
	mock := &WulanganEventEmitter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
