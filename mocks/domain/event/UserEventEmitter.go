// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	message "github.com/fikrirnurhidayat/kasusastran/app/domain/message"
	mock "github.com/stretchr/testify/mock"
)

// UserEventEmitter is an autogenerated mock type for the UserEventEmitter type
type UserEventEmitter struct {
	mock.Mock
}

// EmitRegisteredEvent provides a mock function with given fields: _a0
func (_m *UserEventEmitter) EmitRegisteredEvent(_a0 *message.User) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*message.User) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserEventEmitter interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserEventEmitter creates a new instance of UserEventEmitter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserEventEmitter(t mockConstructorTestingTNewUserEventEmitter) *UserEventEmitter {
	mock := &UserEventEmitter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
