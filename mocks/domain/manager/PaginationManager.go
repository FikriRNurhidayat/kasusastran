// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	manager "github.com/fikrirnurhidayat/kasusastran/app/domain/manager"
	mock "github.com/stretchr/testify/mock"

	proto "github.com/fikrirnurhidayat/kasusastran/proto"
)

// PaginationManager is an autogenerated mock type for the PaginationManager type
type PaginationManager struct {
	mock.Mock
}

// FromIncomingRequest provides a mock function with given fields: _a0
func (_m *PaginationManager) FromIncomingRequest(_a0 *proto.RequestPagination) *manager.Pagination {
	ret := _m.Called(_a0)

	var r0 *manager.Pagination
	if rf, ok := ret.Get(0).(func(*proto.RequestPagination) *manager.Pagination); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*manager.Pagination)
		}
	}

	return r0
}

// NewOutgoingResponse provides a mock function with given fields: _a0
func (_m *PaginationManager) NewOutgoingResponse(_a0 *manager.Pagination) *proto.ResponsePagination {
	ret := _m.Called(_a0)

	var r0 *proto.ResponsePagination
	if rf, ok := ret.Get(0).(func(*manager.Pagination) *proto.ResponsePagination); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*proto.ResponsePagination)
		}
	}

	return r0
}

type mockConstructorTestingTNewPaginationManager interface {
	mock.TestingT
	Cleanup(func())
}

// NewPaginationManager creates a new instance of PaginationManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPaginationManager(t mockConstructorTestingTNewPaginationManager) *PaginationManager {
	mock := &PaginationManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
