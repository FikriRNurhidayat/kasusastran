// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	nsq "github.com/nsqio/go-nsq"
	mock "github.com/stretchr/testify/mock"
)

// SeratListener is an autogenerated mock type for the SeratListener type
type SeratListener struct {
	mock.Mock
}

// CreatedEventListener provides a mock function with given fields: message
func (_m *SeratListener) CreatedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSeratListener interface {
	mock.TestingT
	Cleanup(func())
}

// NewSeratListener creates a new instance of SeratListener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSeratListener(t mockConstructorTestingTNewSeratListener) *SeratListener {
	mock := &SeratListener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
