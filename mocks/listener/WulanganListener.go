// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	nsq "github.com/nsqio/go-nsq"
	mock "github.com/stretchr/testify/mock"
)

// WulanganListener is an autogenerated mock type for the WulanganListener type
type WulanganListener struct {
	mock.Mock
}

// CreatedEventListener provides a mock function with given fields: message
func (_m *WulanganListener) CreatedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeletedEventListener provides a mock function with given fields: message
func (_m *WulanganListener) DeletedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListedEventListener provides a mock function with given fields: message
func (_m *WulanganListener) ListedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RetrievedEventListener provides a mock function with given fields: message
func (_m *WulanganListener) RetrievedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdatedEventListener provides a mock function with given fields: message
func (_m *WulanganListener) UpdatedEventListener(message *nsq.Message) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*nsq.Message) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewWulanganListener interface {
	mock.TestingT
	Cleanup(func())
}

// NewWulanganListener creates a new instance of WulanganListener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWulanganListener(t mockConstructorTestingTNewWulanganListener) *WulanganListener {
	mock := &WulanganListener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
