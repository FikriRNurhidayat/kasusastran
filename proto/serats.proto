syntax = "proto3";

package kasusastran;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/fikrirnurhidayat/kasusastran/api;kasusastran";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Serats";
    version: "1.0";
    contact: {
      name: "Fikri Rahmat Nurhidayat";
      url: "https://github.com/fikrirnurhidayat";
      email: "fikrirnurhidayat@gmail.com";
    };
  };
};

// Allow users to create and manage Serats 
service Serats {
  rpc ListSerats(ListSeratsRequest) returns (ListSeratsResponse) {
    option (google.api.http) = {
      get : "/v1/serats"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "ListSerats"
      summary: "List Serats"
      description: "Retrieve list of serats"
      tags: "Serats"
    };
  }

  rpc GetSerat(GetSeratRequest) returns (Serat) {
    option (google.api.http) = {
      get : "/v1/serats/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetSerat"
      summary: "Get Serat"
      description: "Retrieve serat detail"
      tags: "Serats"
    };
  }

  rpc DeleteSerat(DeleteSeratRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/serats/{id}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "DeleteSerat"
      summary: "Delete Serat"
      description: "Remove existing serat by id"
      tags: "Serats"
    };
  }

  rpc CreateSerat(CreateSeratRequest) returns (Serat) {
    option (google.api.http) = {
      post : "/v1/serats"
      body : "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "CreateSerat"
      summary: "Create Serat"
      description: "Add new serat on the database"
      tags: "Serats"
    };
  }

  rpc UpdateSerat(UpdateSeratRequest) returns (Serat) {
    option (google.api.http) = {
      put : "/v1/serats/{id}"
      body : "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "UpdateSerat"
      summary: "Update Serat"
      description: "Change serat information"
      tags: "Serats"
    };
  }
}

message ListSeratsRequest {
  RequestPagination pagination = 1;
}

message ListSeratsResponse {
  message MetaListSerats {
    ResponsePagination pagination = 1;
  }

  MetaListSerats meta = 1;
  repeated Serat serats = 2;
}

message GetSeratRequest {
  string id = 1;
}

message DeleteSeratRequest {
  string id = 1;
}

message CreateSeratRequest {
  string title = 1;
  string description = 2;
  string body = 3;
  string cover_image_url = 4;
  string thumbnail_image_url = 5;
}

message UpdateSeratRequest {
  string id = 1;
  string title = 2;
  string description = 3;
  string body = 4;
  string cover_image_url = 5;
  string thumbnail_image_url = 6;
}

message RequestPagination {
  uint32 page = 1;
  uint32 page_size = 2;
}

message ResponsePagination {
  uint32 page = 1;
  uint32 page_size = 2;
  uint32 page_count = 3;
  uint32 total = 4;
}

message Serat {
  string id = 1;
  string title = 2;
  string description = 3;
  string body = 4;
  string cover_image_url = 5;
  string thumbnail_image_url = 6; 
}
